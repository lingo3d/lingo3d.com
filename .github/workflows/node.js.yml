# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**.yml'

jobs:
  build_backend:
    name: build_backend
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./backend
        shell: bash
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v3
      with:
        clean: false
    - uses: dorny/paths-filter@v2
      id: filter
      with: 
        filters: |
          backend:
            - 'backend/**'
    - name: install deps
      if: steps.filter.outputs.backend == 'true'
      run: yarn install --frozen-lockfile
    - name: Build Strapi app
      if: steps.filter.outputs.backend == 'true'
      run: ./build.sh
    - name: turn on app
      if: steps.filter.outputs.backend == 'true'
      run: pm2 startOrReload ecosystem.config.js
      
#   build_homepage:
#     name: build_homepage
#     needs: build_backend
#     runs-on: self-hosted
#     defaults:
#       run:
#         working-directory: ./homepage
#     strategy:
#       matrix:
#         node-version: [16.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         clean: false
#     - uses: dorny/paths-filter@v2
#       id: filter
#       with: 
#         filters: |
#           homepage:
#             - 'homepage/**'
#     - name: install deps --frozen-lockfile
#       if: steps.filter.outputs.homepage == 'true'
#       run: yarn install --frozen-lockfile
#     - name: Build Homepage
#       if: steps.filter.outputs.homepage == 'true'
#       run: |
#           yarn build
#     - name: start app
#       if: steps.filter.outputs.homepage == 'true'
#       run: pm2 startOrReload ecosystem.config.js   
      
  build_forum:
    name: build_frontend
    needs: build_backend
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./forum
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v3
      with:
        clean: false
    - uses: dorny/paths-filter@v2
      id: filter
      with: 
        filters: |
          forum:
            - 'forum/**'
    - name: install deps --frozen-lockfile
      if: steps.filter.outputs.forum == 'true'
      run: yarn install --frozen-lockfile
    - name: Build Strapi app
      if: steps.filter.outputs.forum == 'true'
      run: ./build.sh
    - name: turn on app
      if: steps.filter.outputs.forum == 'true'
      run: pm2 startOrReload ecosystem.config.js
      
#   build_sandbox:
#     name: build_sandbox
#     needs: [build_backend, build_homepage, build_forum]
#     runs-on: self-hosted
#     defaults:
#       run:
#         working-directory: ./sandbox
#     strategy:
#       matrix:
#         node-version: [16.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         clean: false
#     - uses: dorny/paths-filter@v2
#       id: filter
#       with: 
#         filters: |
#           sandbox:
#             - 'sandbox/**'
#     - name: install deps --frozen-lockfile
#       if: steps.filter.outputs.sandbox == 'true'
#       run: yarn install --frozen-lockfile
#     - name: create env file
#       if: steps.filter.outputs.sandbox == 'true'
#       run: |
#           touch .env
#           echo VITE_PUBLIC_STRAPI_URL=${{ secrets.VITE_PUBLIC_STRAPI_URL }} >> .env
#     - name: Build Sandbox app
#       if: steps.filter.outputs.sandbox == 'true'
#       run: |
#           yarn build
#     - name: start app
#       if: steps.filter.outputs.sandbox == 'true'
#       run: pm2 startOrReload ecosystem.config.cjs
#     - name: remove existing env file
#       if: steps.filter.outputs.sandbox == 'true'
#       run: rm .env
         

