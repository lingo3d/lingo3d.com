# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**.yml'

jobs:
  build_backend:
    name: build_backend
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./backend
        shell: bash
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
#     - uses: actions/checkout@v3
#       with:
#         clean: false
#     - uses: dorny/paths-filter@v2
#       id: filter
#       with: 
#         filters: |
#           backend:
#             - 'backend/**'
    - name: install deps
#       if: steps.filter.outputs.backend == 'true'
      run: yarn install --frozen-lockfile
    - name: test
      if: steps.filter.outputs.backend == 'true'
      run: echo "i am changed"
    - name: create env file
#       if: steps.filter.outputs.backend == 'true'
      run: |
          touch .env
          echo HOST=${{ secrets.HOST }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo APP_KEYS=${{ secrets.APP_KEYS }} >> .env
          echo API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }} >> .env
          echo ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo NODE_ENV=production >> $GITHUB_ENV
          echo HOST=${{ secrets.HOST }} >> $GITHUB_ENV
          echo PORT=${{ secrets.PORT }} >> $GITHUB_ENV
          echo APP_KEYS=${{ secrets.APP_KEYS }} >> $GITHUB_ENV
          echo API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }} >> $GITHUB_ENV
          echo ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }} >> $GITHUB_ENV
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> $GITHUB_ENV
    - name: Build Strapi app
#       if: steps.filter.outputs.backend == 'true'
      run: |
          NODE_ENV=production yarn build
    - name: turn on app
#       if: steps.filter.outputs.backend == 'true'
      run: HOST=${{ env.HOST }} PORT=${{ env.PORT }} APP_KEYS=${{ env.APP_KEYS }} API_TOKEN_SALT=${{ env.API_TOKEN_SALT }} ADMIN_JWT_SECRET=${{ env.ADMIN_JWT_SECRET }} JWT_SECRET=${{ env.JWT_SECRET }} AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }} AWS_ACCESS_SECRET=${{ env.AWS_ACCESS_SECRET }} NODE_ENV=production pm2 startOrReload ecosystem.config.js --update-env
    - name: remove existing env file
#       if: steps.filter.outputs.backend == 'true'
      run: rm .env
      
#   build_homepage:
#     name: build_homepage
#     needs: build_backend
#     runs-on: self-hosted
#     defaults:
#       run:
#         working-directory: ./homepage
#     strategy:
#       matrix:
#         node-version: [16.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         clean: false
#     - uses: dorny/paths-filter@v2
#       id: filter
#       with: 
#         filters: |
#           homepage:
#             - 'homepage/**'
#     - name: install deps --frozen-lockfile
#       if: steps.filter.outputs.homepage == 'true'
#       run: yarn install --frozen-lockfile
#     - name: Build Homepage
#       if: steps.filter.outputs.homepage == 'true'
#       run: |
#           yarn build
#     - name: start app
#       if: steps.filter.outputs.homepage == 'true'
#       run: pm2 startOrReload ecosystem.config.js   
      
#   build_forum:
#     name: build_frontend
#     needs: [build_backend, build_homepage]
#     runs-on: self-hosted
#     defaults:
#       run:
#         working-directory: ./forum
#     strategy:
#       matrix:
#         node-version: [16.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         clean: false
#     - uses: dorny/paths-filter@v2
#       id: filter
#       with: 
#         filters: |
#           forum:
#             - 'forum/**'
#     - name: install deps --frozen-lockfile
#       if: steps.filter.outputs.forum == 'true'
#       run: yarn install --frozen-lockfile
#     - name: create env file
#       if: steps.filter.outputs.forum == 'true'
#       run: |
#           touch .env.local
#           echo NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }} >> .env.local
#           echo NEXT_PUBLIC_GOOGLE_CLIENT=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT }} >> .env.local
#           echo NEXT_PUBLIC_STRAPI_URL=${{ secrets.NEXT_PUBLIC_STRAPI_URL }} >> .env.local
#           echo NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }} >> .env.local
#           echo JWT_SECRET_GOOGLE=${{ secrets.JWT_SECRET_GOOGLE }} >> .env.local
#     - name: Build Forum app
#       if: steps.filter.outputs.forum == 'true'
#       run: |
#           yarn build
#     - name: start app
#       if: steps.filter.outputs.forum == 'true'
#       run: pm2 startOrReload ecosystem.config.js
#     - name: remove existing env file
#       if: steps.filter.outputs.forum == 'true'
#       run: rm .env.local
      
#   build_sandbox:
#     name: build_sandbox
#     needs: [build_backend, build_homepage, build_forum]
#     runs-on: self-hosted
#     defaults:
#       run:
#         working-directory: ./sandbox
#     strategy:
#       matrix:
#         node-version: [16.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         clean: false
#     - uses: dorny/paths-filter@v2
#       id: filter
#       with: 
#         filters: |
#           sandbox:
#             - 'sandbox/**'
#     - name: install deps --frozen-lockfile
#       if: steps.filter.outputs.sandbox == 'true'
#       run: yarn install --frozen-lockfile
#     - name: create env file
#       if: steps.filter.outputs.sandbox == 'true'
#       run: |
#           touch .env
#           echo VITE_PUBLIC_STRAPI_URL=${{ secrets.VITE_PUBLIC_STRAPI_URL }} >> .env
#     - name: Build Sandbox app
#       if: steps.filter.outputs.sandbox == 'true'
#       run: |
#           yarn build
#     - name: start app
#       if: steps.filter.outputs.sandbox == 'true'
#       run: pm2 startOrReload ecosystem.config.cjs
#     - name: remove existing env file
#       if: steps.filter.outputs.sandbox == 'true'
#       run: rm .env
         

